#!/usr/bin/env bash
#SBATCH -A NAISS2023-22-1181 -p alvis
#SBATCH -N 1 --gpus-per-node=T4:2  # We're launching 2 nodes with 8 Nvidia T4 GPUs each
#SBATCH -t 0-00:30:00

repo_name="your-repo-name"
# set root directory to the parent directory of the current script
ROOT_DIR="/mnt/e/bloom/project_cs_team_b/bloom/"
# ROOT_DIR=""

DATASET_DIR="${ROOT_DIR}/load_data/datasets"
main_script="${ROOT_DIR}/FL/main.py"
server_script="${ROOT_DIR}/FL/server/server.py"
client_script="${ROOT_DIR}/FL/client/client.py"
config_file="${ROOT_DIR}/config/federated/default.yaml"

# Check if the correct number of arguments is provided
if [ "$#" -eq 0 ]; then
    echo "Usage: $0 <num_clients> [config_file]"
    exit 1
fi

# Extract command-line arguments
num_clients=$1
# config_file=${2:-default.yaml}

# Check if the config file exists
if [ ! -f "${config_file}" ]; then
    echo "Config file ${config_file} does not exist"
    exit 1
fi

echo "Number of clients: ${num_clients}"

echo "Running main.py"
python "${main_script}" -n "${num_clients}" & pid1=$!
wait $pid1

echo "Running server.py"
python "${server_script}" -n "${num_clients}" -c "${config_file}" &
sleep $((num_clients*2))

# Run client.py in a loop with num_clients
for i in `seq 1 ${num_clients}`; do
    echo "Running client.py $i"
    python "${client_script}" -c "${config_file}" --train "${DATASET_DIR}/train_dataset${i}_${num_clients}.pth" --test "${DATASET_DIR}/test_dataset.pth" &
    sleep 1
done

# Enable CTRL+C to stop all background processes
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM
# Wait for all background processes to complete
wait
